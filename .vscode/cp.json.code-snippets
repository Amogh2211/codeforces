{
    // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "main": {
        "prefix": "cpp",
        "body": [
            "// Author: πα",
            "",
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "#define long int64_t",
            "",
            "int main()",
            "{",
            "    int n$1;",
            "    cin >> n;",
            "    return 0;",
            "}",
            "",
        ]
    },
    "main2": {
        "prefix": "cppt",
        "body": [
            "// Author: πα",
            "",
			"#include <iostream>",
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "#define long int64_t",
            "",
            "void solve()",
            "{",
            "    int n$1;",
            "    cin >> n;",
            "    $2",
            "}",
            "",
            "int main()",
            "{",
            "    ios::sync_with_stdio(false), cin.tie(nullptr);",
            "    int T;",
            "    cin >> T;",
            "    while (T--) {",
            "        solve();",
            "    }",
            "    return 0;",
            "}",
            "",
        ]
    },
    "fie": {"prefix": "fie", "body": "for (${3:i} = ${4:0}; ${3:i} < ${2:n}; ++${3:i})$1"},
    "fiei": {"prefix": "fiei", "body": "for (int ${3:i} = ${4:0}; ${3:i} < ${2:n}; ++${3:i})$1"},
    "fiii": {"prefix": "fiii", "body": "for (int ${3:i} = ${4:1}; ${3:i} <= ${2:n}; ++${3:i})$1"},
    "long": {"prefix": "ll", "body": "long"},
    "string": {"prefix": "sr", "body": "string"},

    "vector<int>": {"prefix": "vi", "body": "vector<int>"},
    "vector<long>": {"prefix": "vl", "body": "vector<long>"},
    "vector<char>": {"prefix": "vc", "body": "vector<char>"},
    "vector<bool>": {"prefix": "vb", "body": "vector<bool>"},
    "vector<string>": {"prefix": "vs", "body": "vector<string>"},

    "vector<vector<int>>": {"prefix": "vvi", "body": "vector<vector<int>>"},
    "vector<vector<long>>": {"prefix": "vvl", "body": "vector<vector<long>>"},
    "vector<vector<char>>": {"prefix": "vvc", "body": "vector<vector<char>>"},
    "vector<vector<string>>": {"prefix": "vvs", "body": "vector<vector<string>>"},

    "pair<int, int>": {"prefix": "pii", "body": "pair<int, int>"},
    "pair<long, long>": {"prefix": "pll", "body": "pair<long, long>"},
    "pair<char, char>": {"prefix": "pcc", "body": "pair<char, char>"},
    "pair<string, string>": {"prefix": "pss", "body": "pair<string, string>"},
    "pair<int, char>": {"prefix": "pic", "body": "pair<int, char>"},
    "pair<char, int>": {"prefix": "pci", "body": "pair<char, int>"},
    "pair<int, string>": {"prefix": "pis", "body": "pair<int, string>"},
    "pair<string, int>": {"prefix": "psi", "body": "pair<string, int>"},

    "pair<pair<int, int>, int>>": {"prefix": "ppiii", "body": "pair<pair<int, int>, int>>"},
    "pair<int, pair<int, int>>": {"prefix": "pipii", "body": "pair<int, pair<int, int>>"},
    "pair<pair<long, long>, long>>": {"prefix": "pplll", "body": "pair<pair<long, long>, long>>"},
    "pair<long, pair<long, long>>": {"prefix": "plpll", "body": "pair<long, pair<long, long>>"},

    "vector<pair<int, int>>": {"prefix": "vpii", "body": "vector<pair<int, int>>"},
    "vector<pair<long, long>>": {"prefix": "vpll", "body": "vector<pair<long, long>>"},

    "vector<pair<pair<int, int>, int>>": {"prefix": "vppiii", "body": "vector<pair<pair<int, int>, int>>>"},
    "vector<pair<int, pair<int, int>>>": {"prefix": "vpipii", "body": "vector<pair<int, pair<int, int>>>"},
    "vector<pair<pair<long, long>, long>>>": {"prefix": "vpplll", "body": "vector<pair<pair<long, long>, long>>>"},
    "vector<pair<long, pair<long, long>>>": {"prefix": "vplpll", "body": "vector<pair<long, pair<long, long>>>"},

    "set<int>": {"prefix": "si", "body": "set<int>"},
    "set<long>": {"prefix": "sl", "body": "set<long>"},
    "set<char>": {"prefix": "sc", "body": "set<char>"},
    "set<string>": {"prefix": "ssr", "body": "set<string>"},
    "set<pair<int, int>>": {"prefix": "spii", "body": "set<pair<int, int>>"},
    "set<pair<long, long>>": {"prefix": "spll", "body": "set<pair<long, long>>"},

    "map<int, int>": {"prefix": "mii", "body": "map<int, int>"},
    "map<long, long>": {"prefix": "mll", "body": "map<long, long>"},
    "map<int, long>": {"prefix": "mil", "body": "map<int, long>"},
    "map<long, int>": {"prefix": "mli", "body": "map<long, int>"},
    "map<string, int>": {"prefix": "msi", "body": "map<string, int>"},
    "map<string, long>": {"prefix": "msl", "body": "map<string, long>"},
    "map<int, set<int>>": {"prefix": "misi", "body": "map<int, set<int>>"},
    "map<int, vector<int>>": {"prefix": "mivi", "body": "map<int, vector<int>>"},
    "map<pair<int, int>, int>": {"prefix": "mpiii", "body": "map<pair<int, int>, int>"},
    "map<int, pair<int, int>>": {"prefix": "mipii", "body": "map<int, pair<int, int>>"},

    "first": {"prefix": "ff", "body": "first"},
    "second": {"prefix": "ss", "body": "second"},
    "greater": {"prefix": "gr", "body": "greater<>"},
    "size": {"prefix": "sz", "body": "size()"},
    "push_back": {"prefix": "pb", "body": "push_back($1)"},
    "emplace_back": {"prefix": "eb", "body": "emplace_back($1)"},
    "push_front": {"prefix": "pf", "body": "push_front($1)"},
    "insert": {"prefix": "in", "body": "insert($1)"},
    "erase": {"prefix": "er", "body": "erase($1)"},
    "lower_bound": {"prefix": "lb", "body": "lower_bound($1)"},
    "upper_bound": {"prefix": "ub", "body": "upper_bound($1)"},

    "Declare array": {"prefix": "cn", "body": "const int N = ${1:3e5} + 5;"},
    "Modulo": {"prefix": "cmod", "body": "const int MOD = 1000000007;"},
    "Modulo2": {"prefix": "cmod2", "body": "const int MOD = 998244353;"},
    "Infinity": {"prefix": "cinf", "body": "const int INF = 0x3fffffff;"},
    "Infinity2": {"prefix": "cinf2", "body": "const long INF = (1LL << 62) - 1;"},
    "Pi": {"prefix": "cpi", "body": "const double PI = 3.1415926535898;"},
    "Epsilon": {"prefix": "ceps", "body": "const double EPS = 1e-8;"},
    "Max integer": {"prefix": "IM", "body": "INT_MAX"},
    "Max long": {"prefix": "LLM", "body": "LONG_LONG_MAX"},

    "newline": {"prefix": "nl", "body": "<< '\\n'"},
    "return": {"prefix": "ret", "body": "return"},
    "setprecision": {"prefix": "setprec", "body": "cout << fixed << setprecision(12)"},
    "Print runtime": {"prefix": "clock", "body": "cerr << \"\\nCompleted in \" << 1000 * clock() / CLOCKS_PER_SEC << \" ms\\n\";"},
    "Debug": {"prefix": "dbg", "body": "cerr << \"$1: \" << $1 << endl;"},
    "Meow": {"prefix": "meow", "body": "cerr << ${1:\"Meow\"} << endl;"},
    "popcount": {"prefix": "bpc", "body": "__builtin_popcountll($1)"},
    "popcount?": {"prefix": "bclz", "body": "__builtin_clzll($1)"},
    "ffs": {"prefix": "bffs", "body": "__builtin_ffsll($1)"},
    "Ceiling division": {"prefix": "cdiv", "body": "$1/$2 + bool($1%$2)"},
    "floor": {"prefix": "floor", "body": "llround(floor($1))"},
    "ceil": {"prefix": "ceil", "body": "llround(ceil($1))"},
    "memset": {"prefix": "memset", "body": "memset($1, $2, sizeof($1));"},
    "cout and return": {"prefix": "rc", "body": "return cout << $1, 0;"},
    "Case #t:": {"prefix": "tcase", "body": "cout << \"Case #\" << t << \": \" << "},

    "Fast IO": {"prefix": "fastio", "body": "ios::sync_with_stdio(false), cin.tie(nullptr);"},
    "Begin End": {"prefix": "bend", "body": "$1.begin(), $1.end()"},
    "Yes/No": {"prefix": "yesno", "body": "cout << ($1 ? \"YES\" : \"NO\") << '\\n';"},
}